name: Build, Push, and Deploy Docker image
on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_KEY: ${{ secrets.EC2_KEY }}
    steps:
      # Paso 1: Verificar el código fuente
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Paso 3: Iniciar sesión en DockerHub
      - name: Login to DockerHub
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      # Paso 4: Construir y publicar la imagen Docker del proyecto "Hola Mundo"
      - name: Build and push Hola Mundo
        uses: docker/build-push-action@v2
        with:
          context: ./ # Ruta al directorio del proyecto
          file: ./Dockerfile # Archivo Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/hola-mundo-node:latest

      # Paso 5: Desplegar la imagen en EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Iniciar sesión en DockerHub
            docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
            
            # Descargar la imagen desde DockerHub
            docker pull ${{ secrets.DOCKER_USERNAME }}/hola-mundo-node:latest
            
            # Detener y eliminar cualquier contenedor existente con el mismo nombre
            docker stop hola-mundo-node || true
            docker rm hola-mundo-node || true
            
            # Ejecutar un nuevo contenedor
            docker run -d --name hola-mundo-node -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/hola-mundo-node:latest
