name: Build, Push, and Deploy Docker Image to EC2

on:
  push:
    branches:
            - main 
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_KEY: ${{ secrets.EC2_KEY }}

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Configuración de Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Paso 3: Login a Docker Hub
      - name: Login to DockerHub
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      # Paso 4: Construcción de la imagen Docker
      - name: Build Docker image
        run: |
          docker build --label "commit_sha" -t daniielpro10/hola-mundo-node:v${{github.run_number}} .

      # Paso 5: Push de la imagen Docker a Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push daniielpro10/hola-mundo-node:v${{github.run_number}}
      # Paso 6: Despliegue de la imagen Docker en EC2
      - name: Deploy Docker image to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Actualiza el sistema y Docker
            sudo yum update -y
            sudo yum install docker -y
            sudo systemctl start docker
            sudo systemctl enable docker    
            # Verifica si el puerto está en uso y elimina cualquier contenedor conflictivo
            if sudo lsof -i :3000; then
                echo "El puerto 3000 está en uso. Deteniendo el servicio asociado..."
                sudo docker ps -q --filter "publish=3000" | grep -q . && \
                sudo docker stop $(sudo docker ps -q --filter "publish=3000") && \
                sudo docker rm $(sudo docker ps -q --filter "publish=3000")
            fi
            # Detener y eliminar cualquier contenedor existente con el nombre "saludo"
            if [ "$(sudo docker ps -aq -f name=saludo)" ]; then
                echo "Eliminando contenedor existente..."
                sudo docker stop saludo || true
                sudo docker rm saludo || true
            fi
            # Descarga la imagen más reciente de Docker Hub
            sudo docker pull daniielpro10/hola-mundo-node:v${{github.run_number}}


            # Ejecuta el contenedor con la nueva imagen
            sudo docker run -d -p 3000:3000 --name saludo daniielpro10/hola-mundo-node:v${{github.run_number}}

            # (Opcional) Verifica si el contenedor se está ejecutando
            sudo docker ps
              
